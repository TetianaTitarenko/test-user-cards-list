{"version":3,"file":"static/js/398.67327b0d.chunk.js","mappings":"8NAkCA,EAhCiB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KAClB,OACE,iBACEC,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,gBAAiB,UACjBC,aAAc,OACdC,QAAS,OACTC,UAAW,kCACXC,MAAO,OACPC,SAAU,QACVC,UAAW,aACXC,aAAc,QAXlB,WAcE,gBACEC,IAAKZ,EAAKa,OACVC,IAAKd,EAAKA,KACVC,MAAO,CAAEI,aAAc,MAAOG,MAAO,OAAQO,OAAQ,WAEvD,iBAAKd,MAAO,CAAEe,WAAY,QAA1B,WACE,eAAIf,MAAO,CAAEgB,SAAU,OAAQC,WAAY,QAA3C,SAAsDlB,EAAKA,QAC3D,iBAAKC,MAAO,CAAEC,QAAS,OAAQC,WAAY,UAA3C,WACE,eAAGF,MAAO,CAAEkB,YAAa,QAAzB,UAAoCnB,EAAKoB,OAAzC,cACA,yBAAIpB,EAAKqB,UAAT,wBAKT,EC1Bc,SAASC,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAwBN,EAAAA,EAAAA,UAAS,GAAjC,eAAOO,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACRL,GAAa,GACbM,EAAAA,EAAAA,IAAA,UAVY,oDAUZ,yBACkCH,IAC/BI,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GAEZV,GAAS,SAAAa,GAAS,wBAAQA,IAAR,OAAsBH,EAASI,MAA/B,IAClBZ,GAAa,EACd,IACAa,OAAM,SAAAZ,GACLC,EAASD,GACTD,GAAa,EACd,GACJ,GAAE,CAACG,IACJM,QAAQC,IAAIb,GAMZ,OACE,8BACGE,GACC,wCACEE,GACF,qCAAaA,EAAMa,YAEnB,gCACGjB,EAAMkB,KAAI,SAAA1C,GAAI,OACb,SAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAK2C,GADP,KAIf,mBAAQC,QAhBC,WACfb,GAAQ,SAAAc,GAAQ,OAAIA,EAAW,CAAf,GACjB,EAcO,2BAKT,C","sources":["components/UserCart/userCart.js","page/Tweets/tweets.js"],"sourcesContent":["import React from 'react';\n\nconst UserCard = ({ user }) => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        backgroundColor: '#FFFFFF',\n        borderRadius: '16px',\n        padding: '16px',\n        boxShadow: '0px 4px 16px rgba(0, 0, 0, 0.1)',\n        width: '100%',\n        maxWidth: '480px',\n        boxSizing: 'border-box',\n        marginBottom: '32px',\n      }}\n    >\n      <img\n        src={user.avatar}\n        alt={user.user}\n        style={{ borderRadius: '50%', width: '64px', height: '64px' }}\n      />\n      <div style={{ marginLeft: '16px' }}>\n        <h2 style={{ fontSize: '24px', fontWeight: 'bold' }}>{user.user}</h2>\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          <p style={{ marginRight: '16px' }}>{user.tweets} Tweets</p>\n          <p>{user.followers} Followers</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserCard;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport UserCard from '../../components/UserCart/userCart';\n\nconst API_URL = 'https://644281d133997d3ef91207c3.mockapi.io/users';\n\nexport default function TweetsPage() {\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    setIsLoading(true);\n    axios\n      .get(`${API_URL}?limit=3&page=${page}`)\n      .then(response => {\n        console.log(response);\n        // setUsers([...response.data]); // The elements are not added, the page is re-rendered again.\n        setUsers(prevUsers => [...prevUsers, ...response.data]); // Six elements are added (twice the first three elements)\n        setIsLoading(false);\n      })\n      .catch(error => {\n        setError(error);\n        setIsLoading(false);\n      });\n  }, [page]);\n  console.log(users);\n\n  const loadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : error ? (\n        <div>Error: {error.message}</div>\n      ) : (\n        <>\n          {users.map(user => (\n            <UserCard key={user.id} user={user} />\n          ))}\n          {/*When clicking on the button, the entire page is redrawn, but it is necessary for only the next 3 elements to be appended without redrawing the entire page.  */}\n          <button onClick={loadMore}>Load more</button>\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["user","style","display","alignItems","backgroundColor","borderRadius","padding","boxShadow","width","maxWidth","boxSizing","marginBottom","src","avatar","alt","height","marginLeft","fontSize","fontWeight","marginRight","tweets","followers","TweetsPage","useState","users","setUsers","isLoading","setIsLoading","error","setError","page","setPage","useEffect","axios","then","response","console","log","prevUsers","data","catch","message","map","id","onClick","prevPage"],"sourceRoot":""}